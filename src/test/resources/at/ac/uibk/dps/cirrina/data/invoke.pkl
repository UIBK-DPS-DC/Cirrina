amends "modulepath:/pkl/CollaborativeStateMachineDescription.pkl"
import "modulepath:/pkl/CollaborativeStateMachineDescription.pkl" as CSM

// ------------------------ CSM -------------------------------
name = "collaborativeStateMachine"
version = "2.0"
stateMachines {
    stateMachine1
}

// ------------------------ StateMachine Description -------------------------------
local stateMachine1: CSM.StateMachineDescription = new {
    name = "stateMachine1"
    states {
        stateA
        stateB
        stateC
    }
}

// ------------------------ States -------------------------------
local stateA: CSM.StateDescription = new {
    name = "a"
    initial = true
    after {
        new CSM.TimeoutActionDescription {
            name = "timeout"
            delay = "100"
            action = new CSM.RaiseActionDescription {
                event {
                    name = "update"
                    channel = "internal"
                }
            }
        }
    }
    on {
        new CSM.OnTransitionDescription {
            event = "update"
            target = "a"
            actions {
                new CSM.InvokeActionDescription {
                    serviceType = "increment"
                    isLocal = true
                    input {
                        new {
                            name = "v"
                            value = "v"
                        }
                    }
                    done {
                        new {
                            name = "tob"
                            channel = "internal"
                        }
                    }
                }
                new CSM.AssignActionDescription {
                    variable {
                        name = "e"
                        value = "e + 1"
                    }
                }
            }
        }
        new CSM.OnTransitionDescription {
            event = "tob"
            target = "b"
        }
    }
}

local stateB: CSM.StateDescription = new {
    name = "b"
    entry {
        new CSM.AssignActionDescription {
            variable {
                name = "v"
                value = "$v"
            }
        }
    }
    always {
        new CSM.TransitionDescription {
            target = "a"
            guards {
                new CSM.GuardDescription {
                    expression = "v < 10"
                }
            }
            `else` = "c"
        }
    }
}

local stateC: CSM.StateDescription = new {
    name = "c"
    terminal = true
}